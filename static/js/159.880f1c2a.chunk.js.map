{"version":3,"file":"static/js/159.880f1c2a.chunk.js","mappings":"uOAEMA,EAAmBC,EAAAA,EAAAA,IAAH,yQAehBC,EAAQD,EAAAA,EAAAA,KAAH,2DAEA,SAAAE,GACP,OAAIA,EAAMC,MAAQ,EACT,UACED,EAAMC,MAAQ,EAChB,UAEF,SACR,ICxBGC,EAAkBJ,EAAAA,EAAAA,IAAH,+EAOfK,EAAaL,EAAAA,EAAAA,OAAH,8V,UCPHM,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,YAAhB,OACtB,UAACJ,EAAD,YACE,SAACC,EAAD,CAAYI,KAAK,SAASC,QAASF,EAAnC,SAAgD,qEAGhD,SAACH,EAAD,CAAYI,KAAK,SAASC,QAASH,EAAnC,SAAgD,4EAL5B,E,UCmCxB,EA/BgB,SAAC,GAAsB,IAApBI,EAAmB,EAAnBA,aACjB,GAA0BC,EAAAA,EAAAA,UAASD,GAAnC,eAAOR,EAAP,KAAcU,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,kBACrCD,EAAe,CADsB,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAaA,OARAC,EAAAA,EAAAA,YAAU,WAEND,EADEZ,EAAQ,EAKb,GAAE,CAACA,KAGF,iCACE,UAACJ,EAAD,YACE,SAACE,EAAD,CAAOE,MAAOA,EAAd,SAAsBA,KAEtB,SAACG,EAAD,CACEC,YAAa,kBAAMM,GAAS,SAAAI,GAAS,OAAIA,EAAY,CAAhB,GAAxB,EACbT,YAAa,kBAAMK,GAAS,SAAAI,GAAS,OAAIA,EAAY,CAAhB,GAAxB,OAIhBH,IAAW,SAACI,EAAA,EAAD,MAGjB,ECxBD,EARoB,WAClB,OACE,+BACE,SAAC,EAAD,CAASP,aAAc,EAAGQ,MAAOA,EAAAA,KAGtC,C","sources":["components/Counter/Counter.styled.jsx","components/Counter/Controls/Controls.styled.jsx","components/Counter/Controls/Controls.jsx","components/Counter/Counter.jsx","pages/CounterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst CounterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  width: 800px;\n  margin-top: 20px;\n  padding: 20px;\n\n  background-color: #332b00;\n  border: 2px solid #f2ab26;\n  border-radius: 20px;\n`;\n\nconst Value = styled.span`\n  font-size: 50px;\n  color: ${props => {\n    if (props.value > 0) {\n      return '#00f90f';\n    } else if (props.value < 0) {\n      return '#ff0000';\n    }\n    return '#f2ab26';\n  }};\n`;\n\nexport { CounterContainer, Value };\n","import styled from '@emotion/styled';\n\nconst ControlsWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n\n  margin-top: 20px;\n`;\n\nconst ControlBtn = styled.button`\n  width: 280px;\n  height: 60px;\n\n  background-color: #332b00;\n  border-radius: 16px;\n  outline: none;\n  border: 2px solid#f2ab26;\n  color: #f2ab26;\n\n  font-size: 20px;\n\n  cursor: pointer;\n  transition: 300ms;\n\n  :hover {\n    background-color: #002b00;\n    border: 2px solid #00f90f;\n    color: #00f90f;\n  }\n`;\n\nexport { ControlsWrapper, ControlBtn };\n","import { ControlsWrapper, ControlBtn } from './Controls.styled';\n\nexport const Controls = ({ onIncrement, onDecrement }) => (\n  <ControlsWrapper>\n    <ControlBtn type=\"button\" onClick={onDecrement}>\n      Зменшити на 1\n    </ControlBtn>\n    <ControlBtn type=\"button\" onClick={onIncrement}>\n      Збільшити на 1\n    </ControlBtn>\n  </ControlsWrapper>\n);\n","import { useState, useEffect } from 'react';\n// Component\nimport { CounterContainer, Value } from './Counter.styled';\nimport { Controls } from './Controls/Controls';\nimport Clock from 'components/Clock';\n\nconst Counter = ({ initialValue }) => {\n  const [value, setValue] = useState(initialValue);\n  const [visible, setVisible] = useState(() =>\n    initialValue > 0 ? true : false\n  );\n  //? коли нам треба ініціювати стейт з значення що вичисляється то потрібно використовувати стрілку дял того щоб значення не перевичислялось на кожному ререндері\n\n  useEffect(() => {\n    if (value > 0) {\n      setVisible(true);\n    } else {\n      setVisible(false);\n    }\n  }, [value]);\n\n  return (\n    <>\n      <CounterContainer>\n        <Value value={value}>{value}</Value>\n\n        <Controls\n          onIncrement={() => setValue(prevState => prevState + 1)}\n          onDecrement={() => setValue(prevState => prevState - 1)}\n        />\n      </CounterContainer>\n\n      {visible && <Clock />}\n    </>\n  );\n};\n\nexport default Counter;\n\n// export default class Counter extends Component {\n//   static defaultProps = {\n//     initialValue: 1,\n//   };\n\n//   state = {\n//     value: this.props.initialValue,\n//     visible: this.props.initialValue > 0 ? true : false,\n//   };\n\n//   handleIncrement = () => {\n//     this.setState(prevState => ({\n//       value: prevState.value + 1,\n//     }));\n\n//     this.setState(prevState => {\n//       if (prevState.value > 0) {\n//         return {\n//           visible: true,\n//         };\n//       }\n//     });\n//   };\n\n//   handleDecrement = () => {\n//     this.setState(prevState => ({\n//       value: prevState.value - 1,\n//     }));\n\n//     this.setState(prevState => {\n//       if (prevState.value <= 0) {\n//         return {\n//           visible: false,\n//         };\n//       }\n//     });\n//   };\n\n//   render() {\n//     const { value } = this.state;\n//     const { Timer } = this.props;\n\n//     return (\n//       <>\n//         <CounterContainer>\n//           <Value value={value}>{value}</Value>\n\n//           <Controls\n//             onIncrement={this.handleIncrement}\n//             onDecrement={this.handleDecrement}\n//           />\n//         </CounterContainer>\n\n//         {this.state.visible && <Timer />}\n//       </>\n//     );\n//   }\n// }\n","import Counter from 'components/Counter';\nimport Timer from 'components/Clock';\n\nconst CounterPage = () => {\n  return (\n    <>\n      <Counter initialValue={0} Timer={Timer} />\n    </>\n  );\n};\n\nexport default CounterPage;\n"],"names":["CounterContainer","styled","Value","props","value","ControlsWrapper","ControlBtn","Controls","onIncrement","onDecrement","type","onClick","initialValue","useState","setValue","visible","setVisible","useEffect","prevState","Clock","Timer"],"sourceRoot":""}
{"version":3,"file":"static/js/187.69b47a9e.chunk.js","mappings":"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","sources":["hooks/useLocalStorage.js","components/TodoManager/TodoManager.styled.jsx","components/TodoManager/AddTodo/AddTodo.styled.jsx","components/TodoManager/AddTodo/AddTodo.jsx","components/TodoManager/TodoFilter/TodoFilter.styled.jsx","components/TodoManager/TodoFilter/TodoFilter.jsx","components/TodoManager/TodoManager.jsx","pages/Home.jsx","../node_modules/shortid/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js"],"sourcesContent":["const { useState, useEffect } = require('react');\n\nconst useLocalStorage = (key, defaultValue) => {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n};\n\nexport default useLocalStorage;\n","import styled from '@emotion/styled';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n\n  width: 800px;\n  padding: 20px;\n  margin-top: 20px;\n\n  background-color: #332b00;\n  border: 2px solid #f2ab26;\n  border-radius: 20px;\n`;\n\nconst TodoList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n`;\n\nconst Todo = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  width: 600px;\n`;\n\nconst TodoText = styled.p`\n  width: 300px;\n  font-size: 20px;\n  color: #f2ab26;\n  color: ${props => {\n    if (props.isCompleted === true) {\n      return '#00f90f';\n    } else if (props.isCompleted === false) {\n      return '#ff0000';\n    }\n    return '#f2ab26';\n  }};\n`;\n\nconst ChangeIsCompleted = styled.button`\n  width: 120px;\n  height: 40px;\n\n  background-color: #332b00;\n  border-radius: 16px;\n  outline: none;\n  border: 2px solid#f2ab26;\n  color: #f2ab26;\n\n  font-size: 20px;\n\n  cursor: pointer;\n  transition: 300ms;\n\n  :hover {\n    ${props => {\n      if (props.isCompleted === true) {\n        return 'background-color: #290000;border: 2px solid #c81a00;color: #c81a00;';\n      }\n\n      return 'background-color: #003300;border: 2px solid #00f90f;color: #00f90f;';\n    }};\n  }\n`;\n\nconst RemoveTodo = styled.button`\n  width: 120px;\n  height: 40px;\n\n  background-color: #332b00;\n  border-radius: 16px;\n  outline: none;\n  border: 2px solid#f2ab26;\n  color: #f2ab26;\n\n  font-size: 20px;\n\n  cursor: pointer;\n  transition: 300ms;\n\n  :hover {\n    background-color: #290000;\n    border: 2px solid #c81a00;\n    color: #c81a00;\n  }\n`;\n\nconst TodoCounter = styled.p`\n  font-size: 20px;\n  color: #f2ab26;\n`;\n\nexport {\n  Container,\n  TodoList,\n  Todo,\n  TodoText,\n  ChangeIsCompleted,\n  RemoveTodo,\n  TodoCounter,\n};\n","import styled from '@emotion/styled';\n\nconst TodoForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n\n  width: 400px;\n`;\n\nconst FormName = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n\n  font-size: 24px;\n  color: #f2ab26;\n`;\n\nconst NewTodoValue = styled.textarea`\n  width: 400px;\n  max-width: 400px;\n  height: 100px;\n  min-height: 60px;\n  font-size: 20px;\n  padding: 10px;\n\n  background-color: #332b00;\n  border-radius: 16px;\n  outline: none;\n  border: 2px solid#f2ab26;\n  color: #f2ab26;\n\n  transition: 300ms;\n\n  :hover,\n  :focus {\n    border: 2px solid #00f90f;\n  }\n`;\n\nconst AddTodo = styled.button`\n  width: 280px;\n  height: 60px;\n\n  background-color: #332b00;\n  border-radius: 16px;\n  outline: none;\n  border: 2px solid#f2ab26;\n  color: #f2ab26;\n\n  font-size: 20px;\n\n  cursor: pointer;\n  transition: 300ms;\n\n  :hover {\n    background-color: #002b00;\n    border: 2px solid #00f90f;\n    color: #00f90f;\n  }\n`;\n\nexport { TodoForm, FormName, NewTodoValue, AddTodo };\n","import { useState } from 'react';\n// Component\n// import shortid from 'shortid';\nimport { toast } from 'react-toastify';\nimport { TodoForm, FormName, NewTodoValue, AddTodo } from './AddTodo.styled';\n\nconst TodoList = ({ onSubmit }) => {\n  const [newTodoText, setNewTodoText] = useState('');\n\n  const handleInputChange = e => {\n    const { value } = e.currentTarget;\n\n    setNewTodoText(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (newTodoText.trim() === '') {\n      toast.warning('Воу-воу козаче, введи щось)');\n      return;\n    }\n\n    onSubmit(newTodoText);\n\n    setNewTodoText('');\n  };\n\n  return (\n    <TodoForm onSubmit={handleSubmit}>\n      <FormName>\n        Добавити завдання:\n        <NewTodoValue\n          type=\"text\"\n          name=\"newTodoText\"\n          value={newTodoText}\n          onChange={handleInputChange}\n        />\n      </FormName>\n\n      <AddTodo type=\"submit\">Добавити</AddTodo>\n    </TodoForm>\n  );\n};\n\nexport default TodoList;\n\n// export default class TodoList extends Component {\n//   state = {\n//     newTodoText: '',\n//     // completed: 'no',\n//     // licence: false,\n//   };\n\n//   // textInputId = shortid.generate();\n\n//   // handleLicenceChange = e => {\n//   //   this.setState({ licence: e.currentTarget.checked });\n//   // };\n\n//   handleInputChange = e => {\n//     const { name, value } = e.currentTarget;\n//     this.setState({ [name]: value });\n//   };\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n\n//     this.props.onSubmit(this.state.newTodoText);\n\n//     this.setState({ newTodoText: '' });\n//   };\n\n//   render() {\n//     const { newTodoText } = this.state;\n\n//     return (\n//       <TodoForm onSubmit={this.handleSubmit}>\n//         <FormName>\n//           Добавити завдання:\n//           <NewTodoValue\n//             type=\"text\"\n//             name=\"newTodoText\"\n//             value={newTodoText}\n//             onChange={this.handleInputChange}\n//           />\n//         </FormName>\n\n//         {/* <FormName htmlFor={this.textInputId} />\n//         <NewTodoValue id={this.textInputId} /> */}\n\n//         {/* <label>\n//           <input\n//             type=\"radio\"\n//             name=\"completed\"\n//             value=\"yes\"\n//             onChange={this.handleInputChange}\n//             checked={this.state.completed === 'yes'}\n//           />\n//           YES\n//         </label>\n\n//         <label>\n//           <input\n//             type=\"radio\"\n//             name=\"completed\"\n//             value=\"no\"\n//             onChange={this.handleInputChange}\n//             checked={this.state.completed === 'no'}\n//           />\n//           NO\n//         </label> */}\n\n//         {/* <input\n//           type=\"checkbox\"\n//           name=\"licence\"\n//           checked={this.state.licence}\n//           onChange={this.handleLicenceChange}\n//         /> */}\n\n//         <AddTodo type=\"submit\">Добавити</AddTodo>\n//       </TodoForm>\n//     );\n//   }\n// }\n\n//? ЗАКОМЕНТОВАНІ ПРИКЛАДИ: УНІКАЛЬНОЇ ПАРИ LABEL + INPUT ... РАДІО КНОПОК ... CHECKBOX\n","import styled from '@emotion/styled';\n\nconst FilterForm = styled.form`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  width: 600px;\n`;\n\nconst FormName = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  margin: 0 auto;\n  font-size: 20px;\n  color: #f2ab26;\n`;\n\nconst FilterValue = styled.input`\n  width: 240px;\n  height: 40px;\n  font-size: 20px;\n  padding: 0 10px;\n\n  background-color: #332b00;\n  border-radius: 16px;\n  outline: none;\n  border: 2px solid#f2ab26;\n  color: #f2ab26;\n\n  transition: 300ms;\n\n  :hover,\n  :focus {\n    border: 2px solid #00f90f;\n  }\n`;\n\nexport { FilterForm, FormName, FilterValue };\n","import { FilterForm, FormName, FilterValue } from './TodoFilter.styled';\n\nconst TodoFilter = ({ value, onHandleChange }) => (\n  <FilterForm>\n    <FormName>\n      Фільтр:\n      <FilterValue type=\"text\" value={value} onChange={onHandleChange} />\n    </FormName>\n  </FilterForm>\n);\n\nexport default TodoFilter;\n","import {\n  Container,\n  TodoList,\n  Todo,\n  TodoText,\n  ChangeIsCompleted,\n  RemoveTodo,\n  TodoCounter,\n} from './TodoManager.styled';\n\nimport AddTodo from './AddTodo';\nimport TodoFilter from './TodoFilter';\n\nconst TodoManager = ({\n  todos,\n  changeStatus,\n  deleteTodo,\n  onAddTodoSubmit,\n  todoFilterValue,\n  onHandleFilterChange,\n}) => {\n  const totalTodosCount = todos.length;\n\n  const completedTodosCount = todos.reduce(\n    (acc, todo) => (todo.completed ? acc + 1 : acc),\n    0\n  );\n\n  return (\n    <Container>\n      <AddTodo onSubmit={onAddTodoSubmit} />\n\n      <TodoFilter\n        value={todoFilterValue}\n        onHandleChange={onHandleFilterChange}\n      />\n\n      <TodoList>\n        {todos.map(({ id, task, completed }) => (\n          <Todo key={id}>\n            <TodoText isCompleted={completed}>{task}</TodoText>\n\n            <ChangeIsCompleted onClick={() => changeStatus(id, completed)}>\n              {completed ? 'Готово' : 'В процесі'}\n            </ChangeIsCompleted>\n\n            <RemoveTodo onClick={() => deleteTodo(id)}>Видалити</RemoveTodo>\n          </Todo>\n        ))}\n      </TodoList>\n\n      <TodoCounter>Загальна к-сть завдань: {totalTodosCount}</TodoCounter>\n\n      <TodoCounter>К-сть виконаних завдань: {completedTodosCount}</TodoCounter>\n    </Container>\n  );\n};\n\nexport default TodoManager;\n","import { useState } from 'react';\n\nimport shortid from 'shortid';\nimport useLocalStorage from 'hooks/useLocalStorage';\n\nimport TodoManager from 'components/TodoManager';\n\nconst defaultTodosPack = [\n  { id: 'id-1', task: 'Завершити блок HTML', completed: true },\n  { id: 'id-2', task: 'Завершити блок CSS', completed: true },\n  { id: 'id-3', task: 'Завершити блок JS', completed: true },\n  { id: 'id-4', task: 'Завершити блок REACT', completed: false },\n  { id: 'id-5', task: 'Завершити блок NODEJS', completed: false },\n];\n\nconst Home = () => {\n  const [todosPack, setTodosPack] = useLocalStorage(\n    'todosPack',\n    defaultTodosPack\n  );\n  const [filter, setFilter] = useState('');\n\n  const handleCompletedChange = id => {\n    setTodosPack(todosPack =>\n      todosPack.map(todo =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  };\n\n  const addTodo = text => {\n    if (text !== '') {\n      const newTodo = {\n        id: shortid.generate(),\n        task: text,\n        completed: false,\n      };\n\n      setTodosPack(todosPack => [newTodo, ...todosPack]);\n    }\n  };\n\n  const deleteTodo = id => {\n    setTodosPack(todosPack => todosPack.filter(todo => todo.id !== id));\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const filteredTodos = () => {\n    const normalizedFilterValue = filter.toLowerCase();\n\n    return todosPack.filter(todo =>\n      todo.task.toLowerCase().includes(normalizedFilterValue)\n    );\n  };\n\n  return (\n    <>\n      <TodoManager\n        todos={filteredTodos()}\n        changeStatus={handleCompletedChange}\n        deleteTodo={deleteTodo}\n        onAddTodoSubmit={addTodo}\n        todoFilterValue={filter}\n        onHandleFilterChange={changeFilter}\n      />\n    </>\n  );\n};\n\nexport default Home;\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n"],"names":["require","useState","useEffect","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","setItem","stringify","Container","styled","TodoList","Todo","TodoText","props","isCompleted","ChangeIsCompleted","RemoveTodo","TodoCounter","TodoForm","FormName","NewTodoValue","AddTodo","onSubmit","newTodoText","setNewTodoText","e","preventDefault","trim","toast","type","name","value","onChange","currentTarget","FilterForm","FilterValue","onHandleChange","todos","changeStatus","deleteTodo","onAddTodoSubmit","todoFilterValue","onHandleFilterChange","totalTodosCount","length","completedTodosCount","reduce","acc","todo","completed","map","id","task","onClick","defaultTodosPack","useLocalStorage","todosPack","setTodosPack","filter","setFilter","normalizedFilterValue","toLowerCase","includes","filteredTodos","text","newTodo","shortid","module","exports","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","get","characters","seed","lookup","index","counter","previousSeconds","generate","clusterWorkerId","str","seconds","Date","now","random","format","number","done","loopCounter","pow","build","isValid","seedValue","worker","workerId","newCharacters","undefined","RegExp","replace","test","randomByte","crypto","msCrypto","getRandomValues","size","Uint8Array","bytes","i","_seed_","mask","log","LN2","step"],"sourceRoot":""}
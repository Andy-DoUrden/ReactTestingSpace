{"version":3,"file":"static/js/486.0b6c4d94.chunk.js","mappings":"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","sources":["components/Gallery/Gallery.styled.jsx","components/Gallery/GalleryForm/GalleryForm.styled.jsx","components/Gallery/GalleryForm/GalleryForm.jsx","components/Loader/Loader.jsx","components/Gallery/GalleryContainer/helpers.js","components/Gallery/GalleryContainer/GalleryContainer.styled.jsx","components/Gallery/GalleryContainer/GalleryContainer.jsx","components/Gallery/ModalImage/ModalImage.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Gallery/ModalImage/ModalImage.jsx","components/Gallery/Gallery.jsx","pages/GalleryPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n\n  width: 800px;\n  padding: 20px;\n  margin-top: 20px;\n\n  background-color: #332b00;\n  border: 2px solid #f2ab26;\n  border-radius: 20px;\n`;\n\nexport { Container };\n","import styled from '@emotion/styled';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n\n  width: 400px;\n`;\n\nconst FormName = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n\n  font-size: 24px;\n  color: #f2ab26;\n`;\n\nconst NewFormValue = styled.input`\n  width: 300px;\n  height: 40px;\n  font-size: 20px;\n  padding: 10px;\n\n  background-color: #332b00;\n  border-radius: 16px;\n  outline: none;\n  border: 2px solid#f2ab26;\n  color: #f2ab26;\n\n  transition: 300ms;\n\n  :hover,\n  :focus {\n    border: 2px solid #00f90f;\n  }\n`;\n\nconst Search = styled.button`\n  width: 120px;\n  height: 40px;\n\n  background-color: #332b00;\n  border-radius: 16px;\n  outline: none;\n  border: 2px solid#f2ab26;\n  color: #f2ab26;\n\n  font-size: 20px;\n\n  cursor: pointer;\n  transition: 300ms;\n\n  :hover {\n    background-color: #002b00;\n    border: 2px solid #00f90f;\n    color: #00f90f;\n  }\n`;\n\nexport { Form, FormName, NewFormValue, Search };\n","import { useState } from 'react';\n// Component\nimport { toast } from 'react-toastify';\n\nimport { Form, FormName, NewFormValue, Search } from './GalleryForm.styled';\n\nconst GalleryForm = ({ onSubmit }) => {\n  const [searchText, setSearchText] = useState('');\n\n  const handleInputChange = e => {\n    const { value } = e.currentTarget;\n    setSearchText(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchText.trim() === '') {\n      toast.warning('Воу-воу козаче, введи щось)');\n      return;\n    }\n\n    onSubmit(searchText);\n    setSearchText('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormName>\n        Знайди картинки:\n        <NewFormValue\n          type=\"text\"\n          name=\"searchText\"\n          value={searchText}\n          onChange={handleInputChange}\n          autoComplete=\"off\"\n        />\n      </FormName>\n\n      <Search type=\"submit\">Шукати</Search>\n    </Form>\n  );\n};\n\nexport default GalleryForm;\n\n// export default class GalleryForm extends Component {\n//   state = {\n//     searchText: '',\n//   };\n\n//   handleInputChange = e => {\n//     const { name, value } = e.currentTarget;\n//     this.setState({ [name]: value });\n//   };\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n\n//     if (this.state.searchText.trim() === '') {\n//       toast.warning('Воу-воу козаче, введи щось)');\n//       return;\n//     }\n\n//     this.props.onSubmit(this.state.searchText);\n//     this.setState({ searchText: '' });\n//   };\n\n//   render() {\n//     const { searchText } = this.state;\n\n//     return (\n//       <Form onSubmit={this.handleSubmit}>\n//         <FormName>\n//           Знайди картинки:\n//           <NewFormValue\n//             type=\"text\"\n//             name=\"searchText\"\n//             value={searchText}\n//             onChange={this.handleInputChange}\n//             autoComplete=\"off\"\n//           />\n//         </FormName>\n\n//         <Search type=\"submit\">Шукати</Search>\n//       </Form>\n//     );\n//   }\n// }\n","import { Oval } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Oval\n      height={40}\n      width={40}\n      color=\"#f2ab26\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"oval-loading\"\n      secondaryColor=\"#f2ab26\"\n      strokeWidth={2}\n      strokeWidthSecondary={2}\n    />\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport const fetchImages = async (localPage, searchValue) => {\n  const params = {\n    key: '35900010-e6fba30fbbb71a29105fd08a0',\n    q: searchValue,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    per_page: 12,\n    page: localPage,\n  };\n\n  return axios.get(BASE_URL, { params });\n};\n","import styled from '@emotion/styled';\n\nconst Container = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  flex-wrap: wrap;\n\n  width: 700px;\n  padding: 20px;\n  margin-top: 20px;\n\n  border: 2px solid #f2ab26;\n  border-radius: 20px;\n`;\n\nconst GalleryItem = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 200px;\n  height: 150px;\n\n  border: 2px solid #f2ab26;\n  border-radius: 20px;\n  overflow: hidden;\n\n  transition: 300ms;\n\n  :hover {\n    border-color: #00f90f;\n    scale: 1.05;\n  }\n`;\n\nconst GalleryImage = styled.img`\n  width: 100%;\n  border-radius: 20px;\n`;\n\nconst LoadMoreBtn = styled.button`\n  width: 280px;\n  height: 60px;\n\n  background-color: #332b00;\n  border-radius: 16px;\n  outline: none;\n  border: 2px solid#f2ab26;\n  color: #f2ab26;\n\n  font-size: 20px;\n\n  cursor: pointer;\n  transition: 300ms;\n\n  :hover {\n    background-color: #002b00;\n    border: 2px solid #00f90f;\n    color: #00f90f;\n  }\n`;\n\nexport { Container, GalleryItem, GalleryImage, LoadMoreBtn };\n","import { useState, useEffect, useMemo, useContext } from 'react';\n// Component\nimport Loader from 'components/Loader';\nimport { fetchImages } from './helpers';\n\nimport { ModalImageContext } from '../Gallery';\n\nimport {\n  Container,\n  GalleryItem,\n  GalleryImage,\n  LoadMoreBtn,\n} from './GalleryContainer.styled';\n\nconst START_PAGE = 1;\nconst START_RESPONSE = [];\n\nconst GalleryContainer = ({ searchValue }) => {\n  const [response, setResponse] = useState(START_RESPONSE);\n  const [loading, setLoading] = useState(false);\n  const [localPage, setLocalPage] = useState(START_PAGE);\n  const [totalPictures, settotalPictures] = useState(0);\n\n  const loadImages = useMemo(\n    () => async (page, images, searchValue) => {\n      setLoading(true);\n      const newResponse = await fetchImages(page, searchValue);\n      setLoading(false);\n\n      setResponse(images.concat(newResponse.data.hits));\n\n      settotalPictures(newResponse.data.totalHits);\n\n      setLocalPage(page);\n    },\n    []\n  );\n\n  useEffect(() => {\n    if (searchValue === '') {\n      return;\n    }\n\n    loadImages(START_PAGE, START_RESPONSE, searchValue);\n  }, [searchValue, loadImages]);\n\n  const showModal = useContext(ModalImageContext);\n\n  return (\n    <Container>\n      {response.map(img => (\n        <GalleryItem key={img.id} onClick={() => showModal(img.largeImageURL)}>\n          <GalleryImage src={img.webformatURL} />\n        </GalleryItem>\n      ))}\n\n      <LoadMoreBtn\n        onClick={() => loadImages(localPage + 1, response, searchValue)}\n        hidden={localPage * 12 > totalPictures}\n      >\n        Завантажити ще...\n      </LoadMoreBtn>\n\n      {loading && <Loader />}\n    </Container>\n  );\n};\n\nexport default GalleryContainer;\n\n// export default class GalleryContainer extends Component {\n//   state = {\n//     response: null,\n//     loading: false,\n//     localPage: 1,\n//     targetImg: '',\n//     totalPictures: 0,\n//     itemsCounter: 0,\n//     isHide: true,\n//     showImg: false,\n//   };\n\n//   async componentDidUpdate(prevProps, prevState) {\n//     if (prevProps.searchValue !== this.props.searchValue) {\n//       this.setState({\n//         response: null,\n//       });\n\n//       const response = await this.fetchImages(1);\n//       let hide = false;\n\n//       if (response.data.totalHits - 12 < 12) {\n//         hide = true;\n//       }\n\n//       this.setState({\n//         response: response.data.hits,\n//         totalPictures: response.data.totalHits,\n//         itemsCounter: 12,\n//         isHide: hide,\n//       });\n//     }\n//   }\n\n//   fetchImages = async localPage => {\n//     this.setState({ loading: true });\n\n//     const params = {\n//       key: '35900010-e6fba30fbbb71a29105fd08a0',\n//       q: this.props.searchValue,\n//       image_type: 'photo',\n//       orientation: 'horizontal',\n//       per_page: 12,\n//       page: localPage,\n//     };\n\n//     try {\n//       const response = await axios.get(BASE_URL, { params });\n//       return response;\n//     } catch (error) {\n//       console.log(error);\n//     } finally {\n//       this.setState({ loading: false });\n//     }\n//   };\n\n//   onImageClick = url => {\n//     this.setState({ targetImg: url });\n//     this.props.onOpenModalClick();\n//   };\n\n//   onLoadMoreClick = () => {\n//     this.setState(({ localPage }) => ({\n//       localPage: localPage + 1,\n//     }));\n\n//     this.setState(({ itemsCounter }) => ({\n//       itemsCounter: itemsCounter + 12,\n//     }));\n\n//     setTimeout(async () => {\n//       const newResponse = await this.fetchImages(this.state.localPage);\n\n//       this.setState(({ response }) => ({\n//         response: response.concat(newResponse.data.hits),\n//       }));\n\n//       if (this.state.totalPictures - this.state.itemsCounter < 12) {\n//         this.setState({\n//           isHide: true,\n//         });\n//       }\n//     }, 0);\n//   };\n\n//   openImg = () => {\n//     this.setState(({ showImg }) => ({\n//       showImg: true,\n//     }));\n//   };\n\n//   closeImg = () => {\n//     this.setState(({ showImg }) => ({\n//       showImg: false,\n//     }));\n//   };\n\n//   render() {\n//     const { loading, response, targetImg, isHide, showImg } = this.state;\n//     const { onOpenModalClick, showModal } = this.props;\n\n//     return (\n//       <Container>\n//         {response &&\n//           response.map(img => (\n//             <GalleryItem\n//               key={img.id}\n//               onClick={() => this.onImageClick(img.largeImageURL)}\n//             >\n//               <GalleryImage src={img.webformatURL} />\n//             </GalleryItem>\n//           ))}\n\n//         <LoadMoreBtn onClick={this.onLoadMoreClick} hidden={isHide}>\n//           Завантажити ще...\n//         </LoadMoreBtn>\n\n//         {showModal && (\n//           <Modal\n//             onClose={onOpenModalClick}\n//             showImg={showImg}\n//             resetImg={this.closeImg}\n//           >\n//             <GalleryImage src={targetImg} onLoad={this.openImg} />\n//           </Modal>\n//         )}\n\n//         {loading && (\n//           <Oval\n//             height={40}\n//             width={40}\n//             color=\"#f2ab26\"\n//             wrapperStyle={{}}\n//             wrapperClass=\"\"\n//             visible={true}\n//             ariaLabel=\"oval-loading\"\n//             secondaryColor=\"#f2ab26\"\n//             strokeWidth={2}\n//             strokeWidthSecondary={2}\n//           />\n//         )}\n//       </Container>\n//     );\n//   }\n// }\n","import styled from '@emotion/styled';\n\nconst GalleryImage = styled.img`\n  width: 100%;\n  border-radius: 20px;\n`;\n\nexport { GalleryImage };\n","import styled from '@emotion/styled';\n\nconst Backdrop = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.2);\n  transform: scale(1);\n  padding: 15px;\n`;\n\nconst ModalContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n\n  width: 600px;\n  max-height: 80%;\n  background: #332b00;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n  border-radius: 10px;\n  border: 2px solid #f2ab26;\n  padding: 20px;\n  overflow-y: auto;\n\n  color: #f2ab26;\n  font-size: 20px;\n\n  transition: 300ms;\n  opacity: ${props => {\n    if (props.showImg) {\n      return 1;\n    }\n    return 0;\n  }};\n`;\n\nexport { Backdrop, ModalContainer };\n","import { useEffect, useMemo } from 'react';\n// Component\nimport { createPortal } from 'react-dom';\nimport { Backdrop, ModalContainer } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, showImg, children }) => {\n  const handleKeydown = useMemo(\n    () => e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    },\n\n    [onClose]\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [handleKeydown]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <ModalContainer showImg={showImg}>{children}</ModalContainer>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n\n// export default class Modal extends Component {\n//   componentDidMount() {\n//     window.addEventListener('keydown', this.handleKeydown);\n//   }\n\n//   componentWillUnmount() {\n//     window.removeEventListener('keydown', this.handleKeydown);\n//   }\n\n//   handleKeydown = e => {\n//     if (e.code === 'Escape') {\n//       this.props.onClose();\n\n//       this.props.resetImg();\n//     }\n//   };\n\n//   handleBackdropClick = e => {\n//     if (e.currentTarget === e.target) {\n//       this.props.onClose();\n\n//       this.props.resetImg();\n//     }\n//   };\n\n//   render() {\n//     const { showImg } = this.props;\n\n//     return createPortal(\n//       <Backdrop onClick={this.handleBackdropClick}>\n//         <ModalContainer showImg={showImg}>{this.props.children}</ModalContainer>\n//       </Backdrop>,\n//       modalRoot\n//     );\n//   }\n// }\n","import { useEffect, useState } from 'react';\nimport { GalleryImage } from './ModalImage.styled';\nimport Modal from 'components/Modal';\n\nconst ModalImage = ({ onClose, imgURL }) => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (!imgURL) {\n      setIsLoading(true);\n    }\n  }, [imgURL]);\n\n  if (!imgURL) {\n    return '';\n  }\n\n  return (\n    <Modal onClose={onClose} showImg={!isLoading}>\n      <GalleryImage src={imgURL} onLoad={() => setIsLoading(false)} />\n    </Modal>\n  );\n};\n\nexport default ModalImage;\n","import { useState, createContext } from 'react';\n// Component\nimport { Container } from './Gallery.styled';\nimport GalleryForm from './GalleryForm';\nimport GalleryContainer from './GalleryContainer';\nimport ModalImage from './ModalImage';\n\nexport const ModalImageContext = createContext();\n\nconst Gallery = ({ onOpenModalClick, showModal }) => {\n  const [searchValue, setSearchValue] = useState('');\n  const [imgURL, setImgURL] = useState('');\n\n  return (\n    <ModalImageContext.Provider value={setImgURL}>\n      <Container>\n        <GalleryForm\n          onSubmit={newSearchValue => setSearchValue(newSearchValue)}\n        />\n\n        <GalleryContainer\n          searchValue={searchValue}\n          onOpenModalClick={onOpenModalClick}\n          showModal={showModal}\n        />\n\n        <ModalImage onClose={() => setImgURL('')} imgURL={imgURL} />\n      </Container>\n    </ModalImageContext.Provider>\n  );\n};\n\nexport default Gallery;\n\n// export default class Gallery extends Component {\n//   state = {\n//     searchValue: '',\n//   };\n\n//   handleSearchSubmit = searchValue => {\n//     this.setState({ searchValue });\n//   };\n\n//   render() {\n//     const { searchValue } = this.state;\n//     const { onOpenModalClick, showModal } = this.props;\n\n//     return (\n//       <Container>\n//         <GalleryForm onSubmit={this.handleSearchSubmit} />\n\n//         <GalleryContainer\n//           searchValue={searchValue}\n//           onOpenModalClick={onOpenModalClick}\n//           showModal={showModal}\n//         />\n//       </Container>\n//     );\n//   }\n// }\n","import { useState } from 'react';\n\nimport Gallery from 'components/Gallery';\n\nconst GalleryPage = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowModal(showModal => !showModal);\n  };\n\n  return (\n    <>\n      <Gallery onOpenModalClick={toggleModal} showModal={showModal} />\n    </>\n  );\n};\n\nexport default GalleryPage;\n"],"names":["Container","styled","Form","FormName","NewFormValue","Search","onSubmit","useState","searchText","setSearchText","e","preventDefault","trim","toast","type","name","value","onChange","currentTarget","autoComplete","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","fetchImages","localPage","searchValue","params","key","q","image_type","orientation","per_page","page","axios","GalleryItem","GalleryImage","LoadMoreBtn","START_RESPONSE","response","setResponse","loading","setLoading","setLocalPage","totalPictures","settotalPictures","loadImages","useMemo","images","newResponse","concat","data","hits","totalHits","useEffect","showModal","useContext","ModalImageContext","map","img","onClick","largeImageURL","src","webformatURL","id","hidden","Backdrop","ModalContainer","props","showImg","modalRoot","document","querySelector","onClose","children","handleKeydown","code","window","addEventListener","removeEventListener","createPortal","target","imgURL","isLoading","setIsLoading","onLoad","createContext","onOpenModalClick","setSearchValue","setImgURL","Provider","newSearchValue","setShowModal"],"sourceRoot":""}